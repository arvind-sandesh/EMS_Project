@inject HttpClient Http

<EditForm Model="@EmpObj" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label for="dept" class="form-label">Department</label>
        <InputSelect id="dept" class="form-select" @bind-Value="EmpObj.DepartmentId">
            <option value="">-Department-</option>
            @if (deptList != null)
            {
                @foreach (var dept in deptList)
                {
                    <option value="@dept.DepartmentId">@dept.DepartmentName</option>
                }
            }
        </InputSelect>
        <ValidationMessage For="@(()=>EmpObj.DepartmentId)" class="text-danger" />
    </div>

    <div class="mb-3">
        <label for="fname" class="form-label">First Name</label>
        <InputText id="fname" class="form-control" @bind-Value="EmpObj.FirstName" />
        <ValidationMessage For="@(()=>EmpObj.FirstName)" class="text-danger" />
    </div>

    <div class="mb-3">
        <label for="lname" class="form-label">Last Name</label>
        <InputText id="lname" class="form-control" @bind-Value="EmpObj.LastName" />
        <ValidationMessage For="@(()=>EmpObj.LastName)" class="text-danger" />
    </div>

    <div class="mb-3">
        <label for="gender" class="form-label">Gender</label>
        <InputSelect id="gender" class="form-select" @bind-Value="EmpObj.Gender">
            <option value="">-Gender-</option>
            <option value="Male">Male</option>
            <option value="Female">Female</option>
            <option value="Other">Other</option>
        </InputSelect>
        <ValidationMessage For="@(()=>EmpObj.Gender)" class="text-danger" />
    </div>

    <div class="mb-3">
        <label for="dob" class="form-label">Date of Birth</label>
        <InputDate id="dob" class="form-control" @bind-Value="EmpObj.DateOfBirth" />
        <ValidationMessage For="@(()=>EmpObj.DateOfBirth)" class="text-danger" />
    </div>

    <div class="mb-3">
        <label for="mobile" class="form-label">Mobile Number</label>
        <InputText id="mobile" class="form-control" @bind-Value="EmpObj.MobileNumber" />
        <ValidationMessage For="@(()=>EmpObj.MobileNumber)" class="text-danger" />
    </div>

    <div class="mb-3">
        <label for="email" class="form-label">Email Id</label>
        <InputText id="email" class="form-control" @bind-Value="EmpObj.EmailId" />
        <ValidationMessage For="@(()=>EmpObj.EmailId)" class="text-danger" />
    </div>

    <button type="submit" class="btn btn-sm btn-success">@ButtonText</button>
</EditForm>

@code {
    [Parameter]
    public Employee EmpObj { get; set; } = new();

    [Parameter]
    public string ButtonText { get; set; } = "Save";

    [Parameter]
    public EventCallback OnValidSubmit { get; set; }

    private Department[]? deptList;

    protected async override Task OnInitializedAsync()
    {
        deptList = await Http.GetFromJsonAsync<Department[]>("emp/deptlist");        
    }
}